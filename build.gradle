apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse'

task wrapper(type: Wrapper) { gradleVersion = '1.12' }
defaultTasks 'clean', 'build'

sourceCompatibility = 1.7
archivesBaseName = 'reprorper'



// Eclipse ///////////////////////////////////////////////////////////////////////////////////////////////////

eclipse.classpath.file.whenMerged { classpath ->
	classpath.entries.findAll { entry -> entry.kind == 'output'              }*.path   = 'build/classes/main'
	classpath.entries.findAll { entry -> entry.path == 'java/test/src'       }*.output = 'build/classes/test'
	classpath.entries.findAll { entry -> entry.path == 'java/test/resources' }*.output = 'build/classes/test'
}

eclipse.project.file.whenMerged { project ->
	project.natures.add(0, 'org.springsource.ide.eclipse.gradle.core.nature')
	project.natures += 'eclihx.core.haxenature'
}



// Haxe //////////////////////////////////////////////////////////////////////////////////////////////////////

task callHaxe(type:Exec) {
	commandLine 'haxe', 'build.hxml'
}
callHaxe.doFirst {
	File dir = file('java/haxe/src')
	dir.deleteDir()
}

task buildHaxe(dependsOn: callHaxe) << {
}
compileJava.dependsOn buildHaxe



// Doma //////////////////////////////////////////////////////////////////////////////////////////////////////

processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources

def aptGeneratePath = '.apt_generated'
compileJava.options.compilerArgs = ['-s', aptGeneratePath, '-Adao.subpackage=impl', '-Adao.suffix=Impl']

task makeAPTDirectory << {
	File aptGenerateFile = file(aptGeneratePath)
	aptGenerateFile.deleteDir()
	aptGenerateFile.mkdirs()
}
compileJava.dependsOn makeAPTDirectory

clean.doLast {
	file(aptGeneratePath).deleteDir()
}



// Jetty /////////////////////////////////////////////////////////////////////////////////////////////////////

[jettyRun, jettyRunWar,jettyStop]*.with {
	stopPort = 8076
	stopKey  = "jetty.reprorper"
}
[jettyRun, jettyRunWar]*.with {
	webDefaultXml = file("${project.webAppDir}/WEB-INF/jetty-webdefault.xml")

	//scanIntervalSeconds = 1
	//reload = "false"
}

task copyToDistributes(type: Copy) {
	from 'build/libs/'
	into "distribute/webapps/"
}
war.doLast {
	tasks.copyToDistributes.execute()
}





// Java //////////////////////////////////////////////////////////////////////////////////////////////////////

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
	mavenCentral()
	maven {
		url "http://maven.seasar.org/maven2/"
	}
}

sourceSets {
	def useProfileName
	if (project.hasProperty('profileName')) {
		useProfileName = "$profileName"
	} else {
		useProfileName = 'local'
	}

	println "use profile " + useProfileName

	main {
		java {
			srcDir 'java/haxe/src'
			srcDir 'java/main/src'
			srcDir 'java/framework/src'
			srcDir aptGeneratePath
			srcDir 'java/dao/src'
		}

		resources {
			srcDir 'java/framework/resources'
			srcDir 'java/dao/resources'
			srcDir 'java/main/resources'
			srcDir "java/profile/$useProfileName"
		}
	}

	test {
		java {
			srcDir 'java/test/src'
		}

		resources {
			srcDir 'java/test/resources'
		}
	}
}

configurations {
	compile.exclude module: 'commons-logging'
}

dependencies {
	compile 'javax.ws.rs:javax.ws.rs-api:2.0'
	compile 'javax.transaction:jta:1.1'


	compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'org.slf4j:jcl-over-slf4j:1.7.5'
	compile 'ch.qos.logback:logback-classic:1.0.13'
	compile 'org.glassfish.jersey.core:jersey-server:2.10'
	compile 'org.glassfish.jersey.core:jersey-client:2.10'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.10'
	compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.10'
	compile 'org.glassfish.jersey.ext:jersey-mvc-jsp:2.10'

	compile 'javax.transaction:jta:1.1'
	compile 'postgresql:postgresql:9.1-901-1.jdbc4'


	// Seasar2
	compile 'org.seasar.container:s2-framework:2.4.41'
	compile 'org.seasar.container:s2-extension:2.4.41'
	compile 'org.seasar.container:s2-tiger:2.4.41'
	compile 'org.seasar.mayaa:mayaa:1.1.32'
	//compile 'org.seasar.dao:s2-dao:1.0.51'
	//compile 'org.seasar.dao:s2-dao-tiger:1.0.51'
	compile 'org.seasar.doma:doma:1.37.0'


	// Jersey Test Framework - Grizzly2 container
	testCompile 'com.googlecode.jmockit:jmockit:1.6'
	testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.4'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
}
